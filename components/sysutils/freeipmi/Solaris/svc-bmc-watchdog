#!/bin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#

#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
# Copyright 2016 Jim Klimov
#
#	ident	"@(#)svc-bmc-watchdog	1.1	09/08/14 SMI"

# These are the SMF start/stop/restart methods for bmc-watchdog.

# smf(5)
. /lib/svc/share/smf_include.sh

SMF_FMRI="svc:/system/freeipmi/bmc-watchdog"

if [ $# -eq 0 ]; then
	# No arguments provided - report current status (use "-c" option to
	# svcprop to get the current properties, otherwise false will result)
	if [ "`/usr/bin/svcs -Ho STATE $SMF_FMRI`" = "enabled" ]
	then
		echo "svc-bmc-watchdog: bmc-watchdog is enabled"
	else
		echo "svc-bmc-watchdog: bmc-watchdog is disabled"
	fi
else
	case "$1" in
	'start')
		# bmc-watchdog requires the presence of a BMC character device
		# to run.  If one is not detected, then disable the service
		# and exit.

		if [ ! -c /dev/bmc ]; then
			echo "$0:  No BMC device found: disabling."
			/usr/sbin/svcadm disable $SMF_FMRI
			exit $SMF_EXIT_OK
		fi

			props=`/usr/sbin/svccfg -s $SMF_FMRI listprop config/options | \
			/usr/bin/nawk '{  for (i = 3; i <= NF; i++) printf $i" " }'`
			props=`echo $props |sed 's/.\(.*\)/\1/'|sed 's/\(.*\)./\1/'`

			if [ -z $props ]; then
					echo "bmc-watchdog needs to be configured. Set options as \
					svccfg -s svc:/system/freeipmi/bmc-watchdog setprop \
						config/options '\"-p 0 -a 1 -F -P -S -O -i 900 -e 60 -u 4\"'"
					exit $SMF_EXIT_ERR_CONFIG
			fi
			if [ "{$props}" = "" ]; then
					echo "bmc-watchdog needs to be configured. Set options as \
					svccfg -s svc:/system/freeipmi/bmc-watchdog setprop \
	   				 	config/options '\"-p 0 -a 1 -F -P -S -O -i 900 -e 60 -u 4\"'"
				exit $SMF_EXIT_ERR_CONFIG
			fi
			echo "bmc-watchdog is configured with options \"$props\""

		/usr/sbin/bmc-watchdog -y  > /dev/null 2>&1
 		   	/usr/sbin/bmc-watchdog -d $props > /dev/null 2>&1
		[ $? -ne 0 ] && exit $SMF_EXIT_ERR_FATAL
		;;

	*)
		echo "Usage: $0 start"
		exit $SMF_EXIT_ERR_FATAL
		;;
	esac
fi

exit $SMF_EXIT_OK
